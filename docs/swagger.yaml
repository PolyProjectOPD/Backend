basePath: /api/v1/
definitions:
  entity.Skill:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  entity.Sphere:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  entity.SpheresInput:
    properties:
      spheres:
        items:
          $ref: '#/definitions/entity.Sphere'
        type: array
    required:
    - spheres
    type: object
  entity.UserExistenceInput:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  entity.UserRefreshInput:
    properties:
      token:
        type: string
    required:
    - token
    type: object
  entity.UserSignInInput:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  entity.UserSignUpInput:
    properties:
      birthDate:
        type: string
      email:
        type: string
      firstName:
        type: string
      inSearch:
        type: boolean
      lastName:
        type: string
      password:
        type: string
      skills:
        items:
          $ref: '#/definitions/entity.Skill'
        type: array
      spheres:
        items:
          $ref: '#/definitions/entity.Sphere'
        type: array
    required:
    - birthDate
    - email
    - firstName
    - inSearch
    - lastName
    - password
    - skills
    - spheres
    type: object
  v1.response:
    properties:
      message:
        type: string
    type: object
  v1.signUpResponse:
    properties:
      id:
        type: integer
    type: object
  v1.skillsResponse:
    properties:
      skills:
        items:
          $ref: '#/definitions/entity.Skill'
        type: array
    type: object
  v1.spheresResponse:
    properties:
      spheres:
        items:
          $ref: '#/definitions/entity.Sphere'
        type: array
    type: object
  v1.tokensResponse:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  v1.userExistenceResponse:
    properties:
      Exists:
        type: boolean
    type: object
host: localhost:8080
info:
  contact: {}
  description: API Server for Network OPD Project
  title: Network API
  version: "1.0"
paths:
  /spheres/all:
    get:
      description: Get all spheres
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.spheresResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      summary: Spheres
      tags:
      - Spheres
  /spheres/skills:
    post:
      consumes:
      - application/json
      description: Get all skills from sphere
      parameters:
      - description: Spheres input info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entity.SpheresInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.skillsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      summary: Spheres
      tags:
      - Spheres
  /user/auth/refresh:
    post:
      consumes:
      - application/json
      description: User refresh tokens
      parameters:
      - description: Refresh tokens info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entity.UserRefreshInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.tokensResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      summary: User Refresh Tokens
      tags:
      - User auth
  /user/auth/sign-in:
    post:
      consumes:
      - application/json
      description: User sign-in
      parameters:
      - description: Sign-in info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entity.UserSignInInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.tokensResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      summary: User SignIn
      tags:
      - User auth
  /user/auth/sign-up:
    post:
      consumes:
      - application/json
      description: User sign-up
      parameters:
      - description: Sign-up info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entity.UserSignUpInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/v1.signUpResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      summary: User SignUp
      tags:
      - User auth
  /user/existence:
    post:
      consumes:
      - application/json
      description: User existence
      parameters:
      - description: User existence info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/entity.UserExistenceInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.userExistenceResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
      summary: User existence
      tags:
      - User Auth
  /spheres/all:
    get:
      description: Get all spheres
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.userExistenceResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
      summary: User existence
      tags:
      - User
  /user/logout:
    get:
      consumes:
      - application/json
      description: user sign out from all devices
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - UserAuth: []
      summary: User logout
      tags:
      - User
  /user/sign-out:
    get:
      consumes:
      - application/json
      description: user sign out from current device
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - UserAuth: []
      summary: User signOut
      tags:
      - User
securityDefinitions:
  UserAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
